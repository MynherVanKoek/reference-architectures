# This workflow will deploy our cluster stamp, without the workload.
# It assumes the networking spoke is already in place.

name: Deploy AKS Secure Baseline cluster stamp and Flux

on:
  paths:
    - cluster-stamp.json
    - .github/workflows/aks-deploy.yml
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RESOURCE_GROUP_LOCATION: '<resource-group-location>'                              # The location where the resource group is going to be created
  RESOURCE_GROUP: '<resource-group-name>'                                           # The name for the AKS cluster resource group
  AKS_LOCATION: '<resource-group-localtion>'                                        # The location where the AKS cluster is going to be deployed
  GEO_REDUNDANCY_LOCATION: '<geo-redundancy-location>'                              # The location for Azure resources that support native geo-redunancy. Should be different than the location parameter and ideally should be a paired region - https://docs.microsoft.com/en-us/azure/best-practices-availability-paired-regions. This region does not need to support availability zones.
  TARGET_VNET_RESOURCE_ID: '<cluster-spoke-vnet-resource-id>'                       # The regional network spoke VNet Resource ID that the cluster will be joined to
  K8S_RBAC_AAD_PROFILE_TENANTID: '<tenant-id-with-user-admin-permissions>'          # The tenant to integrate AKS-managed Azure AD
  K8S_RBAC_AAD_PROFILE_ADMIN_GROUP_OBJECTID: '<azure-ad-aks-admin-group-object-id>' # The Azure AD group object ID that has admin access to the AKS cluster

jobs:
  deploy:
    name: Deploy AKS cluster and Flux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Login into your Azure Subscription using your Azure credentials - make sure the credentials has write permissions for the specific resource group/subscription. The credentials should be stored in GitHub Secrets - (Go to Settings Tab ->Secrets)
    # More details on how to create the SPN can be found here - https://github.com/Azure/login#configure-deployment-credentials
    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Deploy the cluster into your environment, assuming all prerequisites are up and running.
    - name: Azure CLI - Deploy AKS cluster
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
         az group create --name ${{ env.RESOURCE_GROUP }} --location ${{ env.RESOURCE_GROUP_LOCATION }}
         az deployment group $([[ ${{ github.event_name }} = pull_request ]] && echo what-if --no-pretty-print || echo create) \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file "cluster-stamp.json" \
            --name "cluster-0001" \
            --parameters \
              location=${{ env.AKS_LOCATION }} \
              geoRedundancyLocation=${{ env.GEO_REDUNDANCY_LOCATION }} \
              targetVnetResourceId=${{ env.TARGET_VNET_RESOURCE_ID }} \
              k8sRbacAadProfileTenantId=${{ env.K8S_RBAC_AAD_PROFILE_TENANTID }} \
              k8sRbacAadProfileAdminGroupObjectID=${{ env.K8S_RBAC_AAD_PROFILE_ADMIN_GROUP_OBJECTID }} \
              # Ideally fetch this secret from a platform-managed secret
              # store such as Azure KeyVault: https://github.com/marketplace/actions/azure-key-vault-get-secrets
              appGatewayListernerCertificate=${{ secrets.APP_GATEWAY_LISTERNER_CERTIFICATE_BASE64 }}
        azcliversion: 2.6.0
